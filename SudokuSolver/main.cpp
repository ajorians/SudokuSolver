#include <iostream>

#include "SudokuBoard.h"
#include "SudokuSolver.h"

int main()
{
   std::cout << "Enter board setup:" << std::endl;
   std::string placements;
   //std::getline(std::cin, placements);
   //placements = "000260701680070090190004500820100040004602900050003028009300074040050036703018000";
   //placements = "000200000490006000800040200008009050906070000010800070000560100020000000309007005";
   //placements = "000003000037805040000001730482000060000000000070000518046900000020106870000400000";//Knight Level 2
   //placements = "000000520009000000000007100000000089900504002640000000004700000000000200028000000";//Knight Level 3
   //placements = "000000000043000800580200000000000230070060080052000000000008014008000320000000000";//Knight Level 4
   //placements = "020100000060000149030000000000010005000372000400060000000000020386000050000008090";//Knight Level 5
   //placements = "000053000000007403700800000000000000000205000000700000060008005008530200000900000";//Knight Level 6
   //placements = "000010000000060700000800900900540060000030000030087002001008000002050000000090000";//Knight Level 7
   //placements = "000006000060000090007090800500904000009080400000703008004070200070000030000500000";//Knight Level 8
   //placements = "000906000030081004860000000000000090047090002502600071000000000000000000900000000";//Knight Level 9
   //placements = "500030000060000020000706000007000800900050006004000300000203000030000010000010003";//Knight Level 10
   //placements = "406000000000026000000100070105000200078000310002000805060001000000780000000000901";//Knight Level 11
   //placements = "008700000000800100010050009000010097009283400140070000300040080001006000000008600";//Knight Level 12
   //placements = "000104030000000000000760004021040000009000500000070420200087000000000000070509000";//Knight Level 13
   //placements = "000000000069000083300000600205390400600200800400600200700000300031000056000000000";//Knight Level 14
   //placements = "000000005009070200000000008000020194000000000241030000700000000002050400900000000";//Knight Level 15 (It used guess logic)
   //placements = "000007020403000000000082030605000000002000800000000904080720000000000708050400000";//Knight Level 16
   //placements = "000106000075000820030020010000000000059701680000000000010060050093000760000305000";//Knight Level 17
   //placements = "000000010800003000700601000070000050000250000006010720000030000000700004030008100";//Knight Level 18 (It used guess logic)
   //placements = "067400100080000052200000008000000006000000000100000000400000007750000040008007290";//Knight Level 19 (It used guess logic)
   //placements = "406000030000000051008000000000000003004609200500000000000000500940000000020000309";//Knight Level 20 (Quite difficult)
   //placements = "080020040000680000600000070000400500000000000005001000020000006000059000040070080";//Knight Level 21
   //placements = "005963200000000000200080009700000002508000906300000004800050007000000000007698400";//Knight Level 22
   //placements = "000080100000002000700510000080000900602000804007000060000027008000600000006040000";//Knight Level 23
   //placements = "800930102009000000700080090000000009407090306900000000090040007000000900106029004";//Knight Level 24
   //placements = "209000003000000900010300006000507300000010000003604000500002010001000000400000802";//Knight Level 25
   //placements = "209000701000030000704080509000000000095000610000000000106020403000070000903000108";//Knight Level 26
   //placements = "000109000080000040000050000700000002003000700100000006000070000070000010000506000";//Knight Level 27
   //placements = "300000007000274000000000000050103040060000050030709060000000000000342000400000003";//Knight Level 28
   //placements = "000000070400083000000026000074000000065000710000000480000630000000240007010000000";//Knight Level 29
   //placements = "000010000000703000001080700040000070908000106010000040004060900000405000000090000";//Knight Level 30
   //placements = "000000000025080470070000050000050000050804030000090000040000080087040910000000000";//Knight Level 31
   //placements = "100000002004020300030000090000108000090000030000704000050000060009060700600000005";//Knight Level 32
   //placements = "000000000087000460090060050000080000006507100000030000050010070032000840000000000";//Knight Level 33
   //placements = "500000000041000000086000000000346000000582000000971000000000980000000250000000006";//Knight Level 34
   //placements = "000501000040000060009060700700000002003000600200000007005090800090000010000805000";//Knight Level 35
   //placements = "008000700000000000201706509005000600000020000006000300702308904000000000004000100";//Knight Level 36
   //placements = "001000200002000700003000900004000107005000309006000802007000500008000600009000400";//Knight Level 37
   //placements = "856000917900000004200000003000000000000020000000000000400000005300000009567000142";//Knight Level 38
   //placements = "500000007000000000000743000008000200005000100002000500000618000000000000700000004";//Knight Level 39
   //placements = "000000850600000000800003000001709000000000000000305200000600004000000002085000000";//Knight Level 40

   placements = "070003000009000507010070020800205000006000400000908005050030040201000800000500090";//King Level 1

   //placements = "200090007000807000470060098003000800002741300006000200350010082000508000600070004";//Queen Level 1

   SudokuBoard sudokuBoard( placements, KingSudoku );
   
   std::cout << sudokuBoard << std::endl;

   if( sudokuBoard.IsBoardValid() )
   {
      std::cout << "Board is valid" << std::endl;
   }
   else
   {
      std::cout << "Board is invalid" << std::endl;
   }

   SudokuSolver sudokuSolver( sudokuBoard );
   while( sudokuSolver.SolveOneStep() )
   {
      sudokuBoard = sudokuSolver.GetBoardSolving();

      std::cout << "Board:" << std::endl;
      std::cout << sudokuBoard << std::endl;
   }

   return 0;
}